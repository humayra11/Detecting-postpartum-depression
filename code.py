# -*- coding: utf-8 -*-
"""Copy of 422_project_(dootsubmit).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1F-3S3wFY8OfUa1o1hWJPMMQx4Sk1mAgu
"""

import missingno as msno
import matplotlib
import matplotlib.pyplot as plt
from sklearn.impute import SimpleImputer
import pandas as pd
import seaborn as sns
from matplotlib import pyplot as plt

from sklearn.naive_bayes import GaussianNB
from sklearn.neighbors import KNeighborsClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier,GradientBoostingClassifier,VotingClassifier

from sklearn.metrics import *
from sklearn.model_selection import *
import numpy as np


from imblearn.over_sampling import SMOTE

# Load the dataset
database=pd.read_csv('/content/drive/MyDrive/422 project/post natal data.csv')

# Data Analysis
# Class Distribution
print(type(database))

print(database.shape)

database.head(10)

database.drop('Timestamp', axis=1)

#Null-values
database.isnull().sum()
#print("Null Values:\n", null_values)

database.duplicated().sum()

database.info()

database[['Problems concentrating or making decision']]

#imputing in "Problems concentrating or making decision"
from sklearn.impute import SimpleImputer
import numpy as np
impute = SimpleImputer(missing_values=np.NaN, strategy='most_frequent')

impute.fit(database[['Problems concentrating or making decision']])

database['Problems concentrating or making decision'] = impute.transform(database[['Problems concentrating or making decision']])

